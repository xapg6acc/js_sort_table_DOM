{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","tableBody","tableRow","rows","sortData","index","tr","words","string","children","innerText","numbers","number","slice","split","join","sort","first","last","localeCompare","append","addEventListener","e","target","cellIndex"],"mappings":";AAAA,aAiCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA/BA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAYF,SAASC,cAAc,SACnCE,EAAeD,EAAAA,EAAUE,MAEzBC,EAAW,SAACC,EAAOC,GACjBC,IAAAA,EAAQ,SAAAC,GAAUA,OAAAA,EAAOC,SAASJ,GAAOK,WACzCC,EAAU,SAAAC,GACPA,OAAAA,EACJH,SAASJ,GACTK,UACAG,MAAM,GACNC,MAAM,KACNC,KAAK,KAGFT,OAAAA,GACD,IAAA,SACHJ,EAASc,KAAK,SAACC,EAAOC,GACbP,OAAAA,EAAQM,GAASN,EAAQO,KAElC,MAEF,QACEhB,EAASc,KAAK,SAACC,EAAOC,GACbX,OAAAA,EAAMU,GAAOE,cAAcZ,EAAMW,MAI9CjB,EAAUmB,OAAVnB,MAAAA,EAAoBC,EAAAA,KAGtBJ,EAAUuB,iBAAiB,QAAS,SAAAC,GAClClB,EAASkB,EAAEC,OAAOC,UAAWF,EAAEC,OAAOb","file":"main.b7221de3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst tableRow = [...tableBody.rows];\n\nconst sortData = (index, tr) => {\n  const words = string => string.children[index].innerText;\n  const numbers = number => {\n    return number\n      .children[index]\n      .innerText\n      .slice(1)\n      .split(',')\n      .join('');\n  };\n\n  switch (tr) {\n    case 'Salary':\n      tableRow.sort((first, last) => {\n        return numbers(first) - numbers(last);\n      });\n      break;\n\n    default:\n      tableRow.sort((first, last) => {\n        return words(first).localeCompare(words(last));\n      });\n  };\n\n  tableBody.append(...tableRow);\n};\n\ntableHead.addEventListener('click', e => {\n  sortData(e.target.cellIndex, e.target.innerText);\n});\n"]}